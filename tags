!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ISspace	httpd.c	30;"	d	file:
LIBS	Makefile	/^LIBS = -lpthread #-lsocket$/;"	m
SERVER_STRING	httpd.c	32;"	d	file:
STDERR	httpd.c	35;"	d	file:
STDIN	httpd.c	33;"	d	file:
STDOUT	httpd.c	34;"	d	file:
accept_request	httpd.c	/^void accept_request(void *arg)$/;"	f
bad_request	httpd.c	/^void bad_request(int client)$/;"	f
cannot_execute	httpd.c	/^void cannot_execute(int client)$/;"	f
cat	httpd.c	/^void cat(int client, FILE *resource)$/;"	f
error_die	httpd.c	/^void error_die(const char *sc)$/;"	f
execute_cgi	httpd.c	/^void execute_cgi(int client, const char *path,$/;"	f
get_line	httpd.c	/^int get_line(int sock, char *buf, int size)$/;"	f
headers	httpd.c	/^void headers(int client, const char *filename)$/;"	f
main	httpd.c	/^int main(void)$/;"	f
main	simpleclient.c	/^int main(int argc, char *argv[])$/;"	f
not_found	httpd.c	/^void not_found(int client)$/;"	f
serve_file	httpd.c	/^void serve_file(int client, const char *filename)$/;"	f
startup	httpd.c	/^int startup(u_short *port)$/;"	f
unimplemented	httpd.c	/^void unimplemented(int client)$/;"	f
